1.安装git
安装完成后，设置
         $ git config --global user.name "Your Name"
         $ git config --global user.email "email@example.com"

2.创建版本库
2.1 创建空目录
         $ mkdir learngit
         $ cd learngit
         $ pwd
         /Users/sxl/leargit
2.2 初始化
         $ git init
         Initialized empty Git repository in /Users/sxl/learngit/
2.3 将文件添加到版本库
    a. 创建文件readme.txt
    b. 添加,可反复多次使用，添加多个文件
         $ git add redme.txt
    c. 提交
         $ git commit -m "wrote a readme file" 
         [master (root-commit) ......]........

3. 时光穿梭机
git status  查看工作区状态
        $ git status
git diff  查看修改内容
        $ git diff readme.txt
3.1 版本回退
git log 查看历史记录
        $ git log
    在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，往上100个版本，可写成HEAD~100。
git reset 版本回退
        $ git reset --hard HEAD^
git reflog 记录每一次命令，可用于查看版本的commit id
        $ git reflog
    HEAD指向的版本就是当前版本，因此Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit id
    穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本
    要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本

3.2 工作区和暂存区
工作区   可见目录
版本库
    .git 其中最重要的是stage（或index）暂存区、分支master、HEAD
    a. 用git add把文件添加进去，实际上就是把文件添加到暂存区
    b. 用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支

3.3 管理修改
    Git跟踪并管理的是修改，而非文件
    每次修改时，如果不用git add 到暂存区，那就不会加入到commit

3.4 撤销修改
    场景1：当改乱了工作区的某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file
    场景2：当不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>,
           就回到了场景1,第二步按照场景1操作
    场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退，不过前提是没有推送到远程库

3.5 删除文件
